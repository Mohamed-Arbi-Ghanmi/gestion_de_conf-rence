/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javafxapplication1;

/**
 *
 * @author mohamed
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;

public class AjouterConferencier extends javax.swing.JFrame {

    /**
     * Creates new form AjouterConferencier
     */
    public AjouterConferencier() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        textenom = new javax.swing.JTextField();
        textetitredepresentation = new javax.swing.JTextField();
        texteinstitution = new javax.swing.JTextField();
        textepays = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 500));

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setPreferredSize(new java.awt.Dimension(817, 507));

        textenom.setBackground(new java.awt.Color(0, 153, 153));
        textenom.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        textenom.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(51, 255, 51)), "Nom", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        textenom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textenomActionPerformed(evt);
            }
        });

        textetitredepresentation.setBackground(new java.awt.Color(0, 153, 153));
        textetitredepresentation.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        textetitredepresentation.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Titre de pr√©sentation", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(255, 255, 255))); // NOI18N
        textetitredepresentation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textetitredepresentationActionPerformed(evt);
            }
        });

        texteinstitution.setBackground(new java.awt.Color(0, 153, 153));
        texteinstitution.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        texteinstitution.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Institution", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(255, 255, 255))); // NOI18N
        texteinstitution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                texteinstitutionActionPerformed(evt);
            }
        });

        textepays.setBackground(new java.awt.Color(0, 153, 153));
        textepays.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        textepays.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pays d'origine", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(255, 255, 255))); // NOI18N
        textepays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textepaysActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Liberation Sans Narrow", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Ajouter Conferencier");

        jButton1.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 153));
        jButton1.setText("Ajouter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("previous");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jButton2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textepays, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(texteinstitution, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textetitredepresentation, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textenom, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(273, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(338, 338, 338))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)))
                .addComponent(textenom, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textetitredepresentation, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(texteinstitution, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textepays, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 92, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 134, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textepaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textepaysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textepaysActionPerformed

    private void texteinstitutionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_texteinstitutionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_texteinstitutionActionPerformed

    private void textetitredepresentationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textetitredepresentationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textetitredepresentationActionPerformed

    private void textenomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textenomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textenomActionPerformed

    // Cette m√©thode ajoute un conf√©rencier √† la base de donn√©es
private boolean ajouterConferencier(String nom, String paysOrigine, String institution, String titrePresentation) {
    // URL JDBC, nom d'utilisateur et mot de passe
    String JDBC_URL = "jdbc:mysql://localhost:3306/projetpoo";
    String USERNAME = "root";
    String PASSWORD = "";

    // Requ√™te SQL pour ins√©rer un nouveau conf√©rencier
    String INSERT_CONF_SQL = "INSERT INTO conferencier (nom, pays_origine, institution, titre_presentation) VALUES (?, ?, ?, ?)";

    try (Connection connection = DriverManager.getConnection(JDBC_URL, USERNAME, PASSWORD);
         PreparedStatement statement = connection.prepareStatement(INSERT_CONF_SQL)) {
        // D√©finir les param√®tres pour la requ√™te SQL
        statement.setString(1, nom);
        statement.setString(2, paysOrigine);
        statement.setString(3, institution);
        statement.setString(4, titrePresentation);

        // Ex√©cuter la requ√™te SQL
        int rowsInserted = statement.executeUpdate();

        // Retourner true si l'ajout est r√©ussi
        return rowsInserted > 0;
    } catch (SQLException ex) {
        System.err.println("Erreur lors de l'ajout du conf√©rencier: " + ex.getMessage());
        // Retourner false en cas d'erreur
        return false;
    }
}

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Contr√¥les de saisie
    String nom = textenom.getText().trim();
    String titre = textetitredepresentation.getText().trim();
    String institution = texteinstitution.getText().trim();
    String pays = textepays.getText().trim();

    if (nom.isEmpty() || titre.isEmpty() || institution.isEmpty() || pays.isEmpty()) {
        // Afficher une alerte si tous les champs ne sont pas remplis
        JOptionPane.showMessageDialog(this, "Tous les champs doivent √™tre remplis.", "Erreur", JOptionPane.ERROR_MESSAGE);
    } else if (!nom.matches("[a-zA-Z ]+")) {
        // Afficher une alerte si le nom contient des caract√®res invalides
        JOptionPane.showMessageDialog(this, "Le nom doit contenir uniquement des lettres et des espaces.", "Erreur", JOptionPane.ERROR_MESSAGE);
    } else if (!titre.matches("[a-zA-Z0-9 ']+")) {
        // Afficher une alerte si le titre de pr√©sentation contient des caract√®res invalides
        JOptionPane.showMessageDialog(this, "Le titre de pr√©sentation doit contenir uniquement des lettres, des espaces et des chiffres et des apostrophes.", "Erreur", JOptionPane.ERROR_MESSAGE);
    } else {
        // Ajout du conf√©rencier √† la base de donn√©es
        if (ajouterConferencier(nom, titre, institution, pays)) {
            // Afficher un message de succ√®s
            JOptionPane.showMessageDialog(this, "Le conf√©rencier a √©t√© ajout√© avec succ√®s.", "Succ√®s", JOptionPane.INFORMATION_MESSAGE);
            // R√©initialiser les champs apr√®s l'ajout
            textenom.setText("");
            textetitredepresentation.setText("");
            texteinstitution.setText("");
            textepays.setText("");
        } else {
            // Afficher un message d'erreur en cas d'√©chec de l'ajout
            JOptionPane.showMessageDialog(this, "Erreur lors de l'ajout du conf√©rencier.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();

        // Cr√©er une instance de la classe manipulation.java et l'afficher
        manipulation manipulationPage = new manipulation();
        manipulationPage.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AjouterConferencier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AjouterConferencier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AjouterConferencier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AjouterConferencier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AjouterConferencier().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField texteinstitution;
    private javax.swing.JTextField textenom;
    private javax.swing.JTextField textepays;
    private javax.swing.JTextField textetitredepresentation;
    // End of variables declaration//GEN-END:variables
}


