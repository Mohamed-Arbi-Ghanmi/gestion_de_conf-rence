/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javafxapplication1;

/**
 *
 * @author mohamed
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.JOptionPane;
import java.sql.Statement;
import java.sql.ResultSet;

public class Inscrire extends javax.swing.JFrame {

     private static final String JDBC_URL = "jdbc:mysql://localhost:3306/projetpoo";
    private static final String USERNAME = "root";
    private static final String PASSWORD = "";
    
    public Inscrire() {
        initComponents();
        setLocationRelativeTo(null);
        addName();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel1.setText("veuillez saisir votre institution et choisir une methode de payement ");

        jTextField1.setBackground(new java.awt.Color(0, 153, 153));
        jTextField1.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jTextField1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Institution", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(255, 255, 255))); // NOI18N

        jComboBox1.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "virement bancaire", "cheque", "bon de commande d'une institution", "espece" }));

        jButton3.setBackground(new java.awt.Color(0, 153, 51));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("sinscrire");
        jButton3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.setText("previous");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(106, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButton6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jButton6)
                .addGap(42, 42, 42)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     
    private  int idUtilisateur = Login.getUserId(); // Supposons que vous avez une méthode pour obtenir l'ID utilisateur
    public String nomPrenomUtilisateur;
    public void addName(){
    // Vérifier si l'ID utilisateur est valide
    if (idUtilisateur == -1) {
        JOptionPane.showMessageDialog(this, "ID utilisateur non valide.", "Erreur", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    // Récupérer le nom et le prénom de l'utilisateur à partir de l'ID utilisateur
    String[] nomPrenom = getNomPrenomUtilisateur(idUtilisateur);
    if (nomPrenom == null) {
        JOptionPane.showMessageDialog(this, "Impossible de récupérer le nom et le prénom de l'utilisateur.", "Erreur", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
     nomPrenomUtilisateur = nomPrenom[0] + " " + nomPrenom[1];
                System.out.println(nomPrenomUtilisateur);    

    // Mettre à jour le label avec le nom et le prénom de l'utilisateur
    jLabel1.setText(String.format("%s, Veuillez saisir votre institution et choisir une méthode de paiement", nomPrenomUtilisateur));

    }
     
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      // Récupérer l'ID de l'utilisateur (à remplacer par la méthode d'obtention de l'ID utilisateur)
    
    
if (jTextField1.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Veuillez saisir votre institution.", "Erreur", JOptionPane.ERROR_MESSAGE);
        return; // Sortir de la méthode sans effectuer l'inscription
    }
    String institution = jTextField1.getText();
    String methodePaiement = (String) jComboBox1.getSelectedItem();

    // Récupérer l'email de l'utilisateur
    String emailUtilisateur = getEmailUtilisateur(idUtilisateur); // Remplacer par l'email de l'utilisateur récupéré de la base de données

    // Vérifier si l'email de l'utilisateur est valide
    if (emailUtilisateur == null) {
        JOptionPane.showMessageDialog(this, "Impossible de récupérer l'email de l'utilisateur.", "Erreur", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (emailExisteDansInscription(emailUtilisateur)) {
        JOptionPane.showMessageDialog(this, "L'utilisateur est déjà inscrit.", "Erreur", JOptionPane.ERROR_MESSAGE);
        this.dispose();
        MenuUtilisateur NewWindow = new MenuUtilisateur();
        NewWindow.setVisible(true);
        return;
    }

    // Insérer l'inscription dans la base de données
    insererInscription(nomPrenomUtilisateur, emailUtilisateur, institution, methodePaiement);

    // Retourner à la page MenuUtilisateur
    MenuUtilisateur menuUtilisateur = new MenuUtilisateur();
    menuUtilisateur.setVisible(true);
    this.dispose(); 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.dispose();
        MenuUtilisateur NewWindow = new MenuUtilisateur();
        NewWindow.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    
private String[] getNomPrenomUtilisateur(int idUtilisateur) {
    String[] nomPrenom = new String[2];
    try (Connection connection = DriverManager.getConnection(JDBC_URL, USERNAME, PASSWORD);
         PreparedStatement statement = connection.prepareStatement("SELECT nom, prenom FROM utilisateur WHERE id_user = ?")) {
        statement.setInt(1, idUtilisateur);
        ResultSet resultSet = statement.executeQuery();
        if (resultSet.next()) {
            nomPrenom[0] = resultSet.getString("nom");
            nomPrenom[1] = resultSet.getString("prenom");
            return nomPrenom;
        } else {
            return null;
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        return null;
    }
}

private String getEmailUtilisateur(int idUtilisateur) {
    try (Connection connection = DriverManager.getConnection(JDBC_URL, USERNAME, PASSWORD);
         PreparedStatement statement = connection.prepareStatement("SELECT email FROM utilisateur WHERE id_user = ?")) {
        statement.setInt(1, idUtilisateur);
        ResultSet resultSet = statement.executeQuery();
        if (resultSet.next()) {
            return resultSet.getString("email");
        } else {
            return null;
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        return null;
    }
}

 private boolean emailExisteDansInscription(String emailUtilisateur) {
        try (Connection connection = DriverManager.getConnection(JDBC_URL, USERNAME, PASSWORD);
                PreparedStatement statement = connection.prepareStatement("SELECT COUNT(*) AS count FROM inscription WHERE email = ?")) {
            statement.setString(1, emailUtilisateur);
            ResultSet resultSet = statement.executeQuery();
            if (resultSet.next()) {
                int count = resultSet.getInt("count");
                return count > 0;
            } else {
                return false;
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            return false;
        }
    }
 
private void insererInscription(String nomPrenomUtilisateur, String emailUtilisateur, String institution, String methodePaiement) {
    try (Connection connection = DriverManager.getConnection(JDBC_URL, USERNAME, PASSWORD)) {
        String sql = "INSERT INTO inscription (nom, email, institution, methode_paiement, id_user) VALUES (?, ?, ?, ?, ?)";
        PreparedStatement statement = connection.prepareStatement(sql);
        statement.setString(1, nomPrenomUtilisateur);
        statement.setString(2, emailUtilisateur);
        statement.setString(3, institution);
        statement.setString(4, methodePaiement);
        statement.setInt(5, idUtilisateur);
        int rowsInserted = statement.executeUpdate();
        if (rowsInserted > 0) {
            JOptionPane.showMessageDialog(this, "Inscription réussie.", "Succès", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erreur lors de l'inscription.", "Erreur", JOptionPane.ERROR_MESSAGE);
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inscrire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inscrire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inscrire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inscrire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inscrire().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
