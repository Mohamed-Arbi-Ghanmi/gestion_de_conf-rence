/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javafxapplication1;

/**
 *
 * @author mohamed
 */

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;


public class modifierconferencier extends javax.swing.JFrame {

   private static final String JDBC_URL = "jdbc:mysql://localhost:3306/projetpoo";
    private static final String USERNAME = "root";
    private static final String PASSWORD = "";
    
    public modifierconferencier() {
        initComponents();
        setLocationRelativeTo(null);
        textenom.setVisible(false);
        textetitredepresentation.setVisible(false);
        textepays.setVisible(false);
        texteinstitution.setVisible(false);
        modifierbtn.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        textenom = new javax.swing.JTextField();
        textetitredepresentation = new javax.swing.JTextField();
        texteinstitution = new javax.swing.JTextField();
        textepays = new javax.swing.JTextField();
        modifierbtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        textenom1 = new javax.swing.JTextField();
        rechercherbtn = new javax.swing.JButton();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 500));

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 500));

        textenom.setBackground(new java.awt.Color(0, 153, 153));
        textenom.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        textenom.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(51, 255, 51)), "Nom", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        textenom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textenomActionPerformed(evt);
            }
        });

        textetitredepresentation.setBackground(new java.awt.Color(0, 153, 153));
        textetitredepresentation.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        textetitredepresentation.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Titre de pr√©sentation", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(255, 255, 255))); // NOI18N
        textetitredepresentation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textetitredepresentationActionPerformed(evt);
            }
        });

        texteinstitution.setBackground(new java.awt.Color(0, 153, 153));
        texteinstitution.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        texteinstitution.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Institution", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(255, 255, 255))); // NOI18N
        texteinstitution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                texteinstitutionActionPerformed(evt);
            }
        });

        textepays.setBackground(new java.awt.Color(0, 153, 153));
        textepays.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        textepays.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pays d'origine", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(255, 255, 255))); // NOI18N
        textepays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textepaysActionPerformed(evt);
            }
        });

        modifierbtn.setText("Modifier");
        modifierbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierbtnActionPerformed(evt);
            }
        });

        jButton1.setText("previous");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        textenom1.setBackground(new java.awt.Color(0, 153, 153));
        textenom1.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        textenom1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(51, 255, 51)), "Entrer l'id", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        textenom1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textenom1ActionPerformed(evt);
            }
        });

        rechercherbtn.setText("Rechercher");
        rechercherbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercherbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(textenom1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(rechercherbtn)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(textenom1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rechercherbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textepays, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(texteinstitution, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textetitredepresentation, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textenom, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(74, 74, 74))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(modifierbtn)
                                .addGap(171, 171, 171))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jButton1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(textenom, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(textetitredepresentation, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(texteinstitution, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(textepays, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(modifierbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(34, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textenomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textenomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textenomActionPerformed

    private void textetitredepresentationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textetitredepresentationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textetitredepresentationActionPerformed

    private void texteinstitutionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_texteinstitutionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_texteinstitutionActionPerformed

    private void textepaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textepaysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textepaysActionPerformed

private boolean modifierConferencier(int id, String nom, String titrePresentation, String institution, String paysOrigine) {
    // Requ√™te SQL pour mettre √† jour un conf√©rencier
    String UPDATE_CONF_SQL = "UPDATE conferencier SET nom = ?, titre_presentation = ?, institution = ?, pays_origine = ? WHERE id_conferencier = ?";

    try (Connection connection = DriverManager.getConnection(JDBC_URL, USERNAME, PASSWORD);
         PreparedStatement statement = connection.prepareStatement(UPDATE_CONF_SQL)) {
        // D√©finir les param√®tres pour la requ√™te SQL
        statement.setString(1, nom);
        statement.setString(2, titrePresentation);
        statement.setString(3, institution);
        statement.setString(4, paysOrigine);
        statement.setInt(5, id);

        // Ex√©cuter la requ√™te SQL
        int rowsUpdated = statement.executeUpdate();

        // Retourner true si la mise √† jour est r√©ussie
        return rowsUpdated > 0;
    } catch (SQLException ex) {
        System.err.println("Erreur lors de la mise √† jour du conf√©rencier: " + ex.getMessage());
        // Retourner false en cas d'erreur
        return false;
    }
}

  

    private void modifierbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierbtnActionPerformed
    String nom = textenom.getText().trim();
    String titre = textetitredepresentation.getText().trim();
    String institution = texteinstitution.getText().trim();
    String pays = textepays.getText().trim();
    String idText = textenom1.getText().trim();
    
    if (nom.isEmpty() || titre.isEmpty() || institution.isEmpty() || pays.isEmpty()) {
        // Afficher une alerte si tous les champs ne sont pas remplis
        JOptionPane.showMessageDialog(this, "Tous les champs doivent √™tre remplis.", "Erreur", JOptionPane.ERROR_MESSAGE);
    } else if (!nom.matches("[a-zA-Z ]+")) {
        // Afficher une alerte si le nom contient des caract√®res invalides
        JOptionPane.showMessageDialog(this, "Le nom doit contenir uniquement des lettres et des espaces.", "Erreur", JOptionPane.ERROR_MESSAGE);
    } else if (!titre.matches("[a-zA-Z0-9 ']+")) {
        // Afficher une alerte si le titre de pr√©sentation contient des caract√®res invalides
        JOptionPane.showMessageDialog(this, "Le titre de pr√©sentation doit contenir uniquement des lettres, des espaces et des chiffres et des apostrophes.", "Erreur", JOptionPane.ERROR_MESSAGE);
    } else {
        int id = Integer.parseInt(idText);
        // Ajout du conf√©rencier √† la base de donn√©es
        if (modifierConferencier(id, nom, titre, institution, pays)) {
            // Afficher un message de succ√®s
            JOptionPane.showMessageDialog(this, "Le conf√©rencier a √©t√© mis √† jour avec succ√®s.", "Succ√®s", JOptionPane.INFORMATION_MESSAGE);
            // R√©initialiser les champs apr√®s l'ajout
            textenom.setText("");
            textetitredepresentation.setText("");
            texteinstitution.setText("");
            textepays.setText("");
            textenom1.setText("");
        } else {
            // Afficher un message d'erreur en cas d'√©chec de l'ajout
            JOptionPane.showMessageDialog(this, "Erreur lors de la mise √† jour du conf√©rencier.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
       }

    }//GEN-LAST:event_modifierbtnActionPerformed

    private void rechercherbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercherbtnActionPerformed
        // V√©rifier si le champ ID est vide
        String idText = textenom1.getText().trim();
        if (idText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Veuillez entrer un ID.", "Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // V√©rifier si l'ID contient uniquement des chiffres
        if (!idText.matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "L'ID doit contenir uniquement des chiffres.", "Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Convertir l'ID en entier
        int id = Integer.parseInt(idText);

        // Effectuer la recherche dans la base de donn√©es
        boolean idExiste = rechercherId(id);
        if (!idExiste) {
            JOptionPane.showMessageDialog(this, "Aucun conf√©rencier trouv√© avec cet ID.", "Information", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Afficher les informations correspondantes
            afficherInformationsConferencier(id);

            // Rendre les composants visibles
            textenom.setVisible(true);
            textetitredepresentation.setVisible(true);
            textepays.setVisible(true);
            texteinstitution.setVisible(true);
            modifierbtn.setVisible(true);
        }
    }//GEN-LAST:event_rechercherbtnActionPerformed

    private void textenom1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textenom1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textenom1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// Fermer la fen√™tre actuelle
    this.dispose();
    
    // Cr√©er une instance de la classe manipulation.java et l'afficher
    manipulation manipulationPage = new manipulation();
    manipulationPage.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

      private boolean rechercherId(int id) {
    try (Connection connection = DriverManager.getConnection(JDBC_URL, USERNAME, PASSWORD);
         PreparedStatement statement = connection.prepareStatement("SELECT * FROM conferencier WHERE id_conferencier = ?")) {
        statement.setInt(1, id);
        ResultSet resultSet = statement.executeQuery();
        return resultSet.next(); // Retourne true si une ligne est trouv√©e, sinon false
    } catch (SQLException ex) {
        System.err.println("Erreur lors de la recherche dans la base de donn√©es: " + ex.getMessage());
        return false;
    }
}
      
      private void afficherInformationsConferencier(int idConferencier) {
          
    try (Connection connection = DriverManager.getConnection(JDBC_URL, USERNAME, PASSWORD);
         PreparedStatement statement = connection.prepareStatement("SELECT * FROM conferencier WHERE id_conferencier = ?")) {
        // Set the parameter for the SQL statement
        statement.setInt(1, idConferencier);
        
        // Execute the SQL statement
        ResultSet resultSet = statement.executeQuery();
        
        if (resultSet.next()) {
            // R√©cup√©rer les informations du conf√©rencier
            String nom = resultSet.getString("nom");
            String titrePresentation = resultSet.getString("titre_presentation");
            String institution = resultSet.getString("institution");
            String paysOrigine = resultSet.getString("pays_origine");
            
            // Afficher les informations dans les zones de texte correspondantes
            textenom.setText(nom);
            textetitredepresentation.setText(titrePresentation);
            texteinstitution.setText(institution);
            textepays.setText(paysOrigine);
        }
    } catch (SQLException ex) {
        System.err.println("Erreur lors de la r√©cup√©ration des informations du conf√©rencier: " + ex.getMessage());
        JOptionPane.showMessageDialog(this, "Erreur lors de la r√©cup√©ration des informations du conf√©rencier.", "Erreur", JOptionPane.ERROR_MESSAGE);
    }
}

      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(modifierconferencier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(modifierconferencier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(modifierconferencier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(modifierconferencier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new modifierconferencier().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton modifierbtn;
    private javax.swing.JButton rechercherbtn;
    private javax.swing.JTextField texteinstitution;
    private javax.swing.JTextField textenom;
    private javax.swing.JTextField textenom1;
    private javax.swing.JTextField textepays;
    private javax.swing.JTextField textetitredepresentation;
    // End of variables declaration//GEN-END:variables
}
